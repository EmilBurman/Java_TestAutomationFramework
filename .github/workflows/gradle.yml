name: Code quality control

on: [push,pull_request]

jobs:
  Label:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      # We need to checkout the repository to access the configured file (.github/label-pr.yml)
      - uses: actions/checkout@v2
      - name: Labeler
        uses: docker://decathlon/pull-request-labeler-action:2.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # Here we can override the path for the action configuration. If none is provided, default one is `.github/label-pr.yml`
          CONFIG_PATH: ${{ secrets.GITHUB_WORKSPACE }}/.github/label-pr.yml
  Build:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Build with Gradle
      run: ./gradlew clean build -x test
    - uses: actions/upload-artifact@v1
      with:
        name: builtArtifacts
        path: build/libs

  TestAPI:
    needs: Build
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - uses: actions/download-artifact@v1
      with:
        name: builtArtifacts
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Test Api with gradle
      run: ./gradlew testAllAPI -Pomdb.api.key=${{ secrets.OMDB_API_KEY }}
    - uses: actions/upload-artifact@v1
      if: failure()
      with:
        name: API Failures - Test Results
        path: build/test-results/testAllAPI
    - uses: actions/upload-artifact@v1
      if: failure()
      with:
        name: API Failures - Reports
        path: build/reports/tests/testAllAPI

  TestBDD:
    needs: Build
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - uses: actions/download-artifact@v1
      with:
        name: builtArtifacts
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Test BDD with gradle
      run: ./gradlew testAllBDD
    - uses: actions/upload-artifact@v1
      if: failure()
      with:
        name: BDD Failures - Test Results
        path: build/test-results/testAllBDD
    - uses: actions/upload-artifact@v1
      if: failure()
      with:
        name: BDD Failures - Reports
        path: build/reports/tests/testAllBDD

  TestFrontend:
    needs: Build
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - uses: actions/download-artifact@v1
      with:
        name: builtArtifacts
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Test Frontend with gradle
      run: ./gradlew testAllFrontend
    - uses: actions/upload-artifact@v1
      if: failure()
      with:
        name: Frontend Failures - Test Results
        path: build/test-results/testAllFrontend
    - uses: actions/upload-artifact@v1
      if: failure()
      with:
        name: Frontend Failures - Reports
        path: build/reports/tests/testAllFrontend
  CodeCoverage:
    needs: Build
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - uses: actions/download-artifact@v1
      with:
        name: builtArtifacts
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: perform checks with gradle
      run: ./gradlew check -Pomdb.api.key=${{ secrets.OMDB_API_KEY }}
    - uses: actions/upload-artifact@v1
      if: failure()
      with:
        name: Coverage Failures - Coverage Reports
        path: build/reports/jacoco/test/html
    - uses: actions/upload-artifact@v1
      with:
        name: Coverage Reports
        path: build/reports/jacoco/test/html
